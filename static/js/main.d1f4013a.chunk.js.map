{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ErrorView/ErrorView.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","name","handleSubmit","e","preventDefault","trim","props","onHandleSubmit","setState","toast","error","handleChange","currentTarget","value","onSubmit","this","className","s","SearchForm","type","SearchForm__button","SearchForm__buttonLabel","SearchForm__input","autoComplete","autoFocus","onChange","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","data-source","ImageGalleryItem__image","onClick","Loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onToggleModal","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","ErrorView","message","role","Button","onLoadMore","ImageGallery","images","page","isLoading","showModal","prevProps","prevState","prevQuery","query","nextQuery","prevPage","nextPage","fetch","then","response","ok","json","Promise","reject","Error","hits","catch","finally","textError","map","id","length","toggleModal","autoClose","App","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1f4013a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1_B5O\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__3kDbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__Tub88\",\"Modal\":\"Modal_Modal__5HMLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1VQ80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__dwp3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1w5hM\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Searchbar extends Component\n{\n  state = {\n    name : \"\"\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.name.trim() === '') {\n      toast.error('Что ищем ?');\n      return;\n    }\n    this.props.onHandleSubmit(this.state.name);\n    // console.log(this.state.name);\n    this.setState({ name: \"\" });\n    \n  };\n   handleChange = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n  \n  render() {\n    \n    return (\n    <header\n      onSubmit={this.handleSubmit}\n      className={s.Searchbar}>\n      <form className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchForm__button}>\n          <span className={s.SearchForm__buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchForm__input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={this.state.name}\n          onChange={this.handleChange}\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n  }\n \n}\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  // onSearchQueryChange: PropTypes.func.isRequired,\n  // value: PropTypes.string.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  webformatURL,\n  largeImageURL,\n  tags,\n  onOpenModal,\n}) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        className={s.ImageGalleryItem__image}\n        onClick={onOpenModal}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Spinner from 'react-loader-spinner';\nimport s from './Loader.module.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nfunction Loader() {\n    return (\n    <Spinner\n      className={s.Loader}\n      type=\"TailSpin\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n}\n\nexport default Loader;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modalPortal');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onToggleModal();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onToggleModal();\n    }\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\n\nexport default function ErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\n\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\nimport Loader from '../Loader';\nimport Modal from '../Modal';\nimport ErrorView from '../ErrorView';\nimport Button from '../Button';\n\nclass ImageGallery extends Component {\n\n  state = {\n    \n    images: [],\n    largeImageURL: '',\n    page: 1,\n    error: null,\n    isLoading: false,\n    showModal: false,\n    // status: 'idle',\n  };\nstatic propTypes = {\n    query: PropTypes.string.isRequired,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.query;\n    const nextQuery = this.props.query;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n    // const { page } = this.state;\n    \n   \n      \n    if (prevQuery !== nextQuery || prevPage!== nextPage ) {\n      this.setState({ page: 1 });\n      this.setState({ isLoading: true });\n    }\n    \n    \n      fetch(`https://pixabay.com/api/?q=${nextQuery}&page=${nextPage}&key=18452046-d075d28130c097165687e8e16&image_type=photo&orientation=horizontal&per_page=12`)\n        // .then(res => res.json())\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          return Promise.reject(new Error('Invalid request'));\n        })\n      \n        .then(images => this.setState({ images: images.hits }))\n        // .then(newImages => {\n        //   if (newImages.total !== 0) {\n        //     this.setState(prevState => ({\n        //       images: [...prevState.images, ...newImages.hits]\n        //     }))\n        //   }\n        // })\n        .catch(error => this.setState({ error }))\n        .finally(() => this.setState({ isLoading: false }));\n      \n   \n  }\n \n  render() {\n    const { images, error, isLoading, largeImageURL, showModal } = this.state;\n    return (\n      <div>\n        {error && <ErrorView textError={error.message} />}\n        {isLoading && <Loader />}\n            {\n              <ul className={s.ImageGallery}>\n                {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n                  <ImageGalleryItem\n                    key={id}\n                    webformatURL={webformatURL}\n                    largeImageURL={largeImageURL}\n                    tags={tags}\n                  // onOpenModal={onOpenModal}\n                  />\n                ))}\n              </ul>\n        }\n        {!isLoading && images.length > 0 && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n        {showModal && (\n          <Modal\n            onToggleModal={this.toggleModal}\n            largeImageURL={largeImageURL}\n          />\n        )}\n         {<ToastContainer autoClose={3000} />}</div>\n        \n        \n     );\n  }\n  \n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  // onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;","import { Component } from 'react';\n// import { ToastContainer} from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import apiService from './services';\n// import Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n// import ImageGalleryItem from './components/ImageGalleryItem';\n// import Button from './components/Button';\n// import Loader from './components/Loader';\n// import Modal from './components/Modal';\n// import ErrorView from './components/ErrorView';\n\nclass App extends Component {\n  state = {\n    query: '',\n    // images: [],\n    // largeImageURL: '',\n    // page: 1,\n    // error: null,\n    // isLoading: false,\n    // showModal: false,\n    // status: 'idle',\n  };\n\n  componentDidMount() {\n    // this.searchImages();\n  }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.query !== prevState.query) {\n  //    this.searchImages(this.state.query, this.state.page);\n  //   }\n  // }\n  // searchImages =  () => {\n  //   const { query, page } = this.state;\n  //   this.setState({ isLoading: true });\n    \n  //   fetch(`https://pixabay.com/api/?q=${query}&page=${page}&key=18452046-d075d28130c097165687e8e16&image_type=photo&orientation=horizontal&per_page=12`)\n  //     // .then(res => res.json())\n  //     .then(response => {\n  //       if (response.ok) {\n  //         return response.json();\n  //       }\n  //       return Promise.reject(new Error('Invalid request'));\n  //     })\n      \n  //     .then(images => this.setState({ images: images.hits }))\n  //     .catch(error=>this.setState({error}))\n  //     .finally(() => this.setState({ isLoading: false }));\n  // };\n  \n  //  handleChange = e => {\n  //   this.setState({ query: e.target.value });\n  // };\n\n  handleSubmit = name => {\n    \n    this.setState({ query:name });\n    // this.searchImages(this.state.query, this.state.page);\n    console.log( name );\n  };\n\n  render() {\n    const {\n      query,\n      // images,\n      // largeImageURL,\n      // isLoading,\n      // showModal,\n      // error,\n      // status,\n    } = this.state;\n    return (\n      \n      <div>\n        <Searchbar\n          onHandleSubmit={this.handleSubmit}\n        />\n        \n        \n          <ImageGallery query={query} />\n        \n\n        \n      </div>\n    \n      \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1r3JS\",\"SearchForm\":\"Searchbar_SearchForm__1hu2k\",\"SearchForm__button\":\"Searchbar_SearchForm__button__35ULD\",\"SearchForm__buttonLabel\":\"Searchbar_SearchForm__buttonLabel__2BcxC\",\"SearchForm__input\":\"Searchbar_SearchForm__input__7m5sG\"};"],"sourceRoot":""}